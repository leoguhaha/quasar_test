// src-electron/electron-preload.js
var { contextBridge, ipcRenderer } = require("electron");
contextBridge.exposeInMainWorld("mainApi", {
  sendSync: (channel, data) => {
    return ipcRenderer.sendSync(channel, data);
  },
  sendAsync: (channel, data) => {
    return ipcRenderer.invoke(channel, data);
  },
  receive: (channel, func) => {
    ipcRenderer.on(channel, (event, ...args) => func(...args));
  },
  subscribe: (topic) => {
    ipcRenderer.send("subscribe", topic);
  },
  unsubscribe: (topic) => {
    ipcRenderer.send("unsubscribe", topic);
  },
  sendMessage: (topic, message) => {
    ipcRenderer.send("sendMessage", topic, message);
  },
  onMessage: (func) => {
    ipcRenderer.on("message", (event, topic, message) => {
      func(topic, message);
    });
  }
});
//# sourceMappingURL=data:application/json;base64,ewogICJ2ZXJzaW9uIjogMywKICAic291cmNlcyI6IFsiLi4vLi4vc3JjLWVsZWN0cm9uL2VsZWN0cm9uLXByZWxvYWQuanMiXSwKICAic291cmNlc0NvbnRlbnQiOiBbIi8vIHByZWxvYWQuanNcclxuY29uc3QgeyBjb250ZXh0QnJpZGdlLCBpcGNSZW5kZXJlciB9ID0gcmVxdWlyZShcImVsZWN0cm9uXCIpO1xyXG5cclxuY29udGV4dEJyaWRnZS5leHBvc2VJbk1haW5Xb3JsZChcIm1haW5BcGlcIiwge1xyXG4gIHNlbmRTeW5jOiAoY2hhbm5lbCwgZGF0YSkgPT4ge1xyXG4gICAgcmV0dXJuIGlwY1JlbmRlcmVyLnNlbmRTeW5jKGNoYW5uZWwsIGRhdGEpO1xyXG4gIH0sXHJcbiAgc2VuZEFzeW5jOiAoY2hhbm5lbCwgZGF0YSkgPT4ge1xyXG4gICAgcmV0dXJuIGlwY1JlbmRlcmVyLmludm9rZShjaGFubmVsLCBkYXRhKTtcclxuICB9LFxyXG4gIHJlY2VpdmU6IChjaGFubmVsLCBmdW5jKSA9PiB7XHJcbiAgICBpcGNSZW5kZXJlci5vbihjaGFubmVsLCAoZXZlbnQsIC4uLmFyZ3MpID0+IGZ1bmMoLi4uYXJncykpO1xyXG4gIH0sXHJcbiAgc3Vic2NyaWJlOiAodG9waWMpID0+IHtcclxuICAgIGlwY1JlbmRlcmVyLnNlbmQoXCJzdWJzY3JpYmVcIiwgdG9waWMpOyAvLyBcdTUyNERcdTdBRUZcdThCRjdcdTZDNDJcdThCQTJcdTk2MDVcdTRFM0JcdTk4OThcclxuICB9LFxyXG4gIHVuc3Vic2NyaWJlOiAodG9waWMpID0+IHtcclxuICAgIGlwY1JlbmRlcmVyLnNlbmQoXCJ1bnN1YnNjcmliZVwiLCB0b3BpYyk7IC8vIFx1NTI0RFx1N0FFRlx1OEJGN1x1NkM0Mlx1NTNENlx1NkQ4OFx1OEJBMlx1OTYwNVxyXG4gIH0sXHJcbiAgc2VuZE1lc3NhZ2U6ICh0b3BpYywgbWVzc2FnZSkgPT4ge1xyXG4gICAgaXBjUmVuZGVyZXIuc2VuZChcInNlbmRNZXNzYWdlXCIsIHRvcGljLCBtZXNzYWdlKTsgLy8gXHU1MjREXHU3QUVGXHU1M0QxXHU5MDAxXHU2RDg4XHU2MDZGXHJcbiAgfSxcclxuICBvbk1lc3NhZ2U6IChmdW5jKSA9PiB7XHJcbiAgICAvLyBcdTRFQ0VcdTRFM0JcdThGREJcdTdBMEJcdTYzQTVcdTY1MzZcdTZEODhcdTYwNkZcclxuICAgIGlwY1JlbmRlcmVyLm9uKFwibWVzc2FnZVwiLCAoZXZlbnQsIHRvcGljLCBtZXNzYWdlKSA9PiB7XHJcbiAgICAgIGZ1bmModG9waWMsIG1lc3NhZ2UpO1xyXG4gICAgfSk7XHJcbiAgfSxcclxufSk7XHJcbiJdLAogICJtYXBwaW5ncyI6ICI7QUFDQSxJQUFNLEVBQUUsZUFBZSxZQUFZLElBQUksUUFBUTtBQUUvQyxjQUFjLGtCQUFrQixXQUFXO0FBQUEsRUFDekMsVUFBVSxDQUFDLFNBQVMsU0FBUztBQUMzQixXQUFPLFlBQVksU0FBUyxTQUFTLElBQUk7QUFBQSxFQUMzQztBQUFBLEVBQ0EsV0FBVyxDQUFDLFNBQVMsU0FBUztBQUM1QixXQUFPLFlBQVksT0FBTyxTQUFTLElBQUk7QUFBQSxFQUN6QztBQUFBLEVBQ0EsU0FBUyxDQUFDLFNBQVMsU0FBUztBQUMxQixnQkFBWSxHQUFHLFNBQVMsQ0FBQyxVQUFVLFNBQVMsS0FBSyxHQUFHLElBQUksQ0FBQztBQUFBLEVBQzNEO0FBQUEsRUFDQSxXQUFXLENBQUMsVUFBVTtBQUNwQixnQkFBWSxLQUFLLGFBQWEsS0FBSztBQUFBLEVBQ3JDO0FBQUEsRUFDQSxhQUFhLENBQUMsVUFBVTtBQUN0QixnQkFBWSxLQUFLLGVBQWUsS0FBSztBQUFBLEVBQ3ZDO0FBQUEsRUFDQSxhQUFhLENBQUMsT0FBTyxZQUFZO0FBQy9CLGdCQUFZLEtBQUssZUFBZSxPQUFPLE9BQU87QUFBQSxFQUNoRDtBQUFBLEVBQ0EsV0FBVyxDQUFDLFNBQVM7QUFFbkIsZ0JBQVksR0FBRyxXQUFXLENBQUMsT0FBTyxPQUFPLFlBQVk7QUFDbkQsV0FBSyxPQUFPLE9BQU87QUFBQSxJQUNyQixDQUFDO0FBQUEsRUFDSDtBQUNGLENBQUM7IiwKICAibmFtZXMiOiBbXQp9Cg==
